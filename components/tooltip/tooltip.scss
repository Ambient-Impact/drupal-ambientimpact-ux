// -----------------------------------------------------------------------------
//   Ambient.Impact - UX - Tooltip component
// -----------------------------------------------------------------------------

@use 'sass:map';
@use 'sass/helpers/selector';
@use '_tooltip' as *;

// Generate the default Material themes.
@each $theme-name, $theme-settings in $tooltip-themes {
  @include tooltip-material-theme(
    $theme-name, map.get($theme-settings, background-colour)
  );
}

.tippy-popper {

  // This fixes some extreme blurry edges occurring in recent Firefox versions
  // as of end of 2023/start of 2024; we don't currently use Tippy animations
  // that rely on this and it likely exists in the Tippy/Popper CSS to prompt
  // browsers to use GPU rendering, but this is likely not needed any more.
  //
  // @todo Disable this only when not using perspective animations?
  //
  // @todo Remove this when upgrading to latest Tippy and Popper if they no
  //   longer exhibit the blur bug.
  perspective: none;

  // These attempt to fix 1px rounding error gaps between the panel and its
  // arrow when using the SVG-based round arrow.
  &[x-placement^='top'] .tippy-roundarrow {
    transform: translateY(-1px);
  }
  &[x-placement^='bottom'] .tippy-roundarrow {
    transform: translateY(1px);
  }
  &[x-placement^='left'] .tippy-roundarrow {
    transform: translateX(-1px);
  }
  &[x-placement^='right'] .tippy-roundarrow {
    transform: translateX(1px);
  }

}

.tippy-tooltip {
  // Set a max-width for the tooltips so they don't get uncomfortably wide.
  // Note that applying this to .tippy-popper will not work, as it gets
  // overridden.
  max-width: $tooltip-max-width;

  // Hide the shadow while the tooltip is marked as hidden. This reduces the
  // flash of a shadow outline before the clip-path transition has finished,
  // but does not fully solve the issue. See:
  // https://github.com/atomiks/tippyjs/issues/281#issuecomment-435583721
  &[data-state=hidden] {
    box-shadow: none;
  }

  // This allows the tooltip to inherit the document's font size if the 'size'
  // option is set, which is our default.
  &[data-size=inherit] {
    font-size:  inherit;
  }

  // Align text to the left in LTR and right in RTL directions, as that's more
  // visually pleasing if or when text wraps to additional lines. Regardless
  // of text alignment, the tooltip container itself will usually be centre-
  // aligned by Tippy and/or Popper, so that's not affected.
  @include selector.root-conditions(('[dir=ltr]'), 'html') {
    text-align: left;
  }
  @include selector.root-conditions(('[dir=rtl]'), 'html') {
    text-align: right;
  }
}
